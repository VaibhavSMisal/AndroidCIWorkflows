name: Performance Profiling
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
      
jobs:
  app_cache_usage:
    runs-on: macos-latest

    outputs: 
      cache_size: $ {{ steps.cache_size.outputs.CACHE_SIZE }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'adopt'
          cache: 'gradle'
          
      - name: Gradle cache
        uses: gradle/gradle-build-action@v2
        
      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: Providing permissions
        run: chmod +x ./gradlew
        
      - name: Run emulator, Install & launch app, Display cache usage
        uses: ReactiveCircus/android-emulator-runner@v2
        id: cache_size_long
        with:
          api-level: 30
          target: google_apis
          arch: x86_64
          script: |
            adb devices
            ./gradlew installDebug
            adb shell am start -n com.example.quizapp/.MainActivity
            echo "CACHE_SIZE_LONG=$(adb shell run-as com.example.quizapp du -sh /data/data/com.example.quizapp/cache)" >> "$GITHUB_OUTPUT"
          
      - name: Store cache size in env variable 
        id: cache_size
        run: |
          echo "CACHE_SIZE=$( echo ${{ steps.cache_size_long.outputs.CACHE_SIZE_LONG }} | cut -d ' ' -f 1)" >> "$GITHUB_OUTPUT"

      # - name: Display cache size in logs
      #   run: echo "The cache size is ${{ env.CACHE_SIZE }}".

  pr_comment_for_cache_usage:
      needs: app_cache_usage
      runs-on: ubuntu-latest

      env: 
        CACHE_USAGE_ENV: ${{ needs.app_cache_usage.outputs.cache_size }}
        CACHE_USAGE_ENV2: "${{ needs.app_cache_usage.outputs.cache_size }}"
      
      permissions:
        pull-requests: write
      steps:
        - name: store cache usage in a variable
          run: echo "CACHE_USAGE_ENV=${CACHE_USAGE_ENV}" >> "$GITHUB_ENV"

        - name: store cache usage in a variable 2
          run: echo "CACHE_USAGE_EN2V=${CACHE_USAGE_ENV2}" >> "$GITHUB_ENV"

        - name: Check env values
          run: |
            echo ${{ env.CACHE_USAGE_ENV }}
            echo ${{ env.CACHE_USAGE_ENV2 }}
          
        - uses: mshick/add-pr-comment@v2
          with:
            message: |
              The **Cache size** is ${{ env.CACHE_USAGE_ENV }}.

